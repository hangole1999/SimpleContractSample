export declare const MongoClient: {
    connect: () => {
        db: () => {
            collection: (col: any) => {
                find: () => {
                    limit: () => {
                        sort: () => {
                            toArray: () => {
                                block_id: string;
                                block_header_state: {
                                    id: string;
                                    block_num: number;
                                    header: {
                                        timestamp: string;
                                        producer: string;
                                        confirmed: number;
                                        previous: string;
                                        transaction_mroot: string;
                                        action_mroot: string;
                                        schedule_version: number;
                                        header_extensions: never[];
                                        producer_signature: string;
                                    };
                                    dpos_proposed_irreversible_blocknum: number;
                                    dpos_irreversible_blocknum: number;
                                    bft_irreversible_blocknum: number;
                                    pending_schedule_lib_num: number;
                                    pending_schedule_hash: string;
                                    pending_schedule: {
                                        version: number;
                                        producers: never[];
                                    };
                                    active_schedule: {
                                        version: number;
                                        producers: {
                                            producer_name: string;
                                            block_signing_key: string;
                                        }[];
                                    };
                                    blockroot_merkle: {
                                        _active_nodes: string[];
                                        _node_count: number;
                                    };
                                    producer_to_last_produced: (string | number)[][];
                                    producer_to_last_implied_irb: (string | number)[][];
                                    block_signing_key: string;
                                    confirm_count: never[];
                                    confirmations: never[];
                                };
                                block_num: number;
                                in_current_chain: boolean;
                                validated: boolean;
                            }[];
                        };
                    };
                };
            } | {
                find: () => {
                    toArray: () => {
                        _id: string;
                        block_id: string;
                        block: {
                            timestamp: string;
                            producer: string;
                            confirmed: number;
                            previous: string;
                            transaction_mroot: string;
                            action_mroot: string;
                            schedule_version: number;
                            new_producers: null;
                            header_extensions: never[];
                            producer_signature: string;
                            transactions: {
                                status: string;
                                cpu_usage_us: number;
                                net_usage_words: number;
                                trx: {
                                    id: string;
                                    signatures: ArrayConstructor[];
                                    compression: string;
                                    packed_context_free_data: string;
                                    context_free_data: never[];
                                    transaction: {
                                        expiration: string;
                                        ref_block_num: number;
                                        ref_block_prefix: number;
                                        max_net_usage_words: number;
                                        max_cpu_usage_ms: number;
                                        delay_sec: number;
                                        context_free_actions: never[];
                                        actions: {
                                            account: string;
                                            name: string;
                                            authorization: {
                                                actor: string;
                                                permission: string;
                                            }[];
                                            data: {
                                                from: string;
                                                to: string;
                                                quantity: string;
                                                memo: string;
                                            };
                                            hex_data: string;
                                        }[];
                                        transaction_extensions: never[];
                                    };
                                };
                            }[];
                            block_extensions: never[];
                        };
                        block_num: number;
                        createdAt: string;
                        irreversible: boolean;
                    }[];
                };
            } | undefined;
        };
    };
};
